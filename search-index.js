var searchIndex = {};
searchIndex["rusty_saw_view"] = {"doc":"`rusty-saw-view` is a Rust program that helps visualize blockchain data from  Hyperledger Sawtooth. Sawtooth is a blockchain framework that  provides a REST API to query information such as the current state of the ledger, individual blocks and transaction, and the entire blockchain itself. Requesting this information from the respective HTTP endpoints returns a  JSON formatted block of data. ","items":[[0,"json_structs","rusty_saw_view","`json_structs` is a collection of submodules that define structures that map to the JSON data found at various endpoints for Hyperledger Sawtooth.",null,null],[5,"get_partial_string","rusty_saw_view::json_structs","Returns a string of the first n and last m characters of the given string",null,{"inputs":[{"name":"string"},{"name":"usize"},{"name":"usize"}],"output":{"name":"string"}}],[0,"json_blocks","","`json_blocks` is a collection of structures that represent the JSON structured  data from the `/blocks` endpoint of Hyperledger Sawtooth. Also includes  methods for retrieving useful information and displaying these structures.",null,null],[3,"BlockData","rusty_saw_view::json_structs::json_blocks","A structure that represents the root data item found at the `/blocks` endpoint.",null,null],[3,"Block","","A structure that represents a Block. Blocks contain metadata and a list of Batches. ",null,null],[3,"BlockHeader","","A structure that represents the metadata of a Block. ",null,null],[3,"Batch","","A structure that represents a Batch. Batches contain metadata and a list of Transactions. ",null,null],[3,"BatchHeader","","A structure that represents the metadata of a Batch. ",null,null],[3,"Transaction","","A structure that represents a Transaction. Transactions contain metadata and a serialized payload encoded in Base64. ",null,null],[3,"TransactionHeader","","A structure that represents the metadata of a Transaction. ",null,null],[3,"Paging","","A structure that represents the paging element found at the `/blocks` endpoint. Only useful if the requester asked for paging.",null,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",0,{"inputs":[],"output":{"name":"blockdata"}}],[11,"get_num_blocks","","Returns the number of blocks contained.",0,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"display_full_data","","Display the individual blocks, their batches, and the transaction contained within them. Uses colored text so use this for terminal printing.",0,null],[11,"display_full_data_no_color","","Display the individual blocks, their batches, and the transaction contained within them. No terminal color, so use this for piping to a file.",0,null],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",1,{"inputs":[],"output":{"name":"block"}}],[11,"get_num_batches","","Returns the number of batches contained.",1,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",2,{"inputs":[],"output":{"name":"blockheader"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",3,{"inputs":[],"output":{"name":"batch"}}],[11,"get_num_txns","","Returns the number of transactions contained.",3,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",4,{"inputs":[],"output":{"name":"batchheader"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",5,{"inputs":[],"output":{"name":"transaction"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",6,{"inputs":[],"output":{"name":"transactionheader"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",7,{"inputs":[],"output":{"name":"paging"}}],[0,"json_state","rusty_saw_view::json_structs","`json_state` is a collection of structures that represent the JSON structured  data from the `/state` endpoint of Hyperledger Sawtooth. Also includes  methods for retrieving useful information and displaying these structures.",null,null],[3,"StateData","rusty_saw_view::json_structs::json_state","A structure that represents the root data item found at the `/state` endpoint.",null,null],[3,"State","","A structure that represents a state found at the `/state` endpoint. States contain an address and the data stored at that address",null,null],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",8,{"inputs":[],"output":{"name":"statedata"}}],[11,"get_num_states","","Returns the number of addresses that contain state.",8,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"display_full_data","","Display the addresses that contain state, and the state stored. Uses colored text so use this for terminal printing.",8,null],[11,"display_full_data_no_color","","Display the addresses that contain state, and the state stored. No terminal color, so use this for piping to a file.",8,null],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",9,{"inputs":[],"output":{"name":"state"}}],[11,"get_address_namespace","","Returns the address namespace (i.e. the first 6 characters of the address). This will panic if the address is not a valid length of 70 characters.",9,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get_address_full","","Returns the full address",9,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[0,"json_reader","rusty_saw_view","`json_reader` contains methods for parsing blockchain JSON into structures found in json_structs. The JSON can come from either files or be located at HTTP endpoints.",null,null],[5,"read_block_data_from_file","rusty_saw_view::json_reader","Reads JSON data from the /blocks endpoint, but stored in a file. Returns the JSON as a BlockData structure.",null,{"inputs":[{"name":"str"}],"output":{"name":"blockdata"}}],[5,"read_state_data_from_file","","Reads JSON data from the /state endpoint, but stored in a file. Returns the JSON as a StateData structure.",null,{"inputs":[{"name":"str"}],"output":{"name":"statedata"}}],[5,"read_block_data_from_endpoint","","Reads JSON data from the /blocks endpoint using a `GET` request. Returns the JSON as a BlockData structure.",null,{"inputs":[{"name":"str"}],"output":{"name":"blockdata"}}],[5,"read_state_data_from_endpoint","","Reads JSON data from the `/state` endpoint using a `GET` request. Returns the JSON as a StateData structure.",null,{"inputs":[{"name":"str"}],"output":{"name":"statedata"}}],[0,"json_deserialize","rusty_saw_view","`json_deserialize` is a collection of methods that help parse payload data stored in Transaction and State structures. The payload is originally serialized by a user chosen method, and then base64 encoded before its stored.",null,null],[5,"parse_cbor","rusty_saw_view::json_deserialize","Parse data that was serialized with CBOR.",null,{"inputs":[{"name":"string"},{"name":"u8"}],"output":{"name":"string"}}],[5,"parse_json","","Parse data that was serialized with JSON.",null,{"inputs":[{"name":"string"},{"name":"u8"}],"output":{"name":"string"}}],[5,"parse_custom","","Parse data that was serialized with a method not originally supported by this application.",null,{"inputs":[{"name":"string"},{"name":"u8"}],"output":{"name":"string"}}]],"paths":[[3,"BlockData"],[3,"Block"],[3,"BlockHeader"],[3,"Batch"],[3,"BatchHeader"],[3,"Transaction"],[3,"TransactionHeader"],[3,"Paging"],[3,"StateData"],[3,"State"]]};
initSearch(searchIndex);
